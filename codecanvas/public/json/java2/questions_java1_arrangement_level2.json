{
    "contentsId": "java4",
    "title": "Javaの配列問題集ページ",
    "subtitle": "中級",
    "questions": [{
            "id": 1,
            "questionId": "java4_1",
            "title": "配列から特定の値を持つ要素を削除",
            "question": "JavaのArrayListを使って、配列から特定の値を持つ要素を削除する方法を説明してください。",
            "explanation": "ArrayListのremoveメソッドを使って特定の値を削除します。削除後の配列を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\nlist.remove(new Integer(3));\nfor(int num : list) {\n    System.out.println(num);\n}\n// Expected output: 1 2 4 5"
        },
        {
            "id": 2,
            "questionId": "java4_2",
            "title": "配列の要素を逆順にする",
            "question": "JavaのCollectionsを使って、配列の要素を逆順にする方法を説明してください。",
            "explanation": "Collectionsのreverseメソッドを使って配列の要素を逆順にします。逆順にした配列を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\nCollections.reverse(list);\nfor(int num : list) {\n    System.out.println(num);\n}\n// Expected output: 5 4 3 2 1"
        },
        {
            "id": 3,
            "questionId": "java4_3",
            "title": "配列をランダムにシャッフルする",
            "question": "JavaのCollectionsを使って、配列をランダムにシャッフルする方法を説明してください。",
            "explanation": "Collectionsのshuffleメソッドを使って配列をランダムにシャッフルします。シャッフルした配列を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\nCollections.shuffle(list);\nfor(int num : list) {\n    System.out.println(num);\n}\n// Output will be a permutation of 1 2 3 4 5"
        },
        {
            "id": 4,
            "questionId": "java4_4",
            "title": "配列をソートする",
            "question": "JavaのCollectionsを使って、配列をソートする方法を説明してください。",
            "explanation": "Collectionsのsortメソッドを使って配列をソートします。ソートした配列を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(5, 3, 4, 1, 2));\nCollections.sort(list);\nfor(int num : list) {\n    System.out.println(num);\n}\n// Expected output: 1 2 3 4 5"
        },
        {
            "id": 5,
            "questionId": "java4_5",
            "title": "配列の要素を特定の条件でフィルタリングする",
            "question": "JavaのStreamを使って、配列の要素を特定の条件でフィルタリングする方法を説明してください。",
            "explanation": "Streamのfilterメソッドを使って配列をフィルタリングします。フィルタリングした結果を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\nlist.stream().filter(num -> num % 2 == 0).forEach(System.out::println);\n// Expected output: 2 4"
        },
        {
            "id": 6,
            "questionId": "java4_6",
            "title": "配列のすべての要素に対して特定の処理をする",
            "question": "JavaのStreamを使って、配列のすべての要素に対して特定の処理をする方法を説明してください。",
            "explanation": "Streamのmapメソッドを使って配列のすべての要素に対して処理をします。処理した結果を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\nlist.stream().map(num -> num * 2).forEach(System.out::println);\n// Expected output: 2 4 6 8 10"
        },
        {
            "id": 7,
            "questionId": "java4_7",
            "title": "配列から特定の要素を見つける",
            "question": "JavaのStreamを使って、配列から特定の要素を見つける方法を説明してください。",
            "explanation": "StreamのfilterメソッドとfindAnyメソッドを使って配列から特定の要素を見つけます。見つけた要素を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\nOptional<Integer> found = list.stream().filter(num -> num == 3).findAny();\nif (found.isPresent()) {\n    System.out.println(found.get());\n}\n// Expected output: 3"
        },
        {
            "id": 8,
            "questionId": "java4_8",
            "title": "配列の要素を結合する",
            "question": "JavaのStreamを使って、配列の要素を結合する方法を説明してください。",
            "explanation": "StreamのcollectメソッドとCollectors.joiningメソッドを使って配列の要素を結合します。結合した結果を出力して確認します。",
            "answer": "ArrayList<String> list = new ArrayList<>(Arrays.asList(\"Java\", \"Python\", \"JavaScript\"));\nString joined = list.stream().collect(Collectors.joining(\", \"));\nSystem.out.println(joined);\n// Expected output: Java, Python, JavaScript"
        },
        {
            "id": 9,
            "questionId": "java4_9",
            "title": "配列の要素を集計する",
            "question": "JavaのStreamを使って、配列の要素を集計する方法を説明してください。",
            "explanation": "StreamのcollectメソッドとCollectors.summingIntメソッドを使って配列の要素を集計します。集計した結果を出力して確認します。",
            "answer": "ArrayList<Integer> list = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\nint sum = list.stream().collect(Collectors.summingInt(Integer::intValue));\nSystem.out.println(sum);\n// Expected output: 15"
        },
        {
            "id": 10,
            "questionId": "java4_10",
            "title": "配列の要素を並べ替える",
            "question": "JavaのArraysクラスのsortメソッドを使って、配列の要素を並べ替える方法を説明してください。",
            "explanation": "Arraysクラスのsortメソッドを使って配列の要素を並べ替えます。並べ替えた結果を出力して確認します。",
            "answer": "int[] numbers = {5, 3, 1, 4, 2};\nArrays.sort(numbers);\nfor (int number : numbers) {\n    System.out.println(number);\n}\n// Expected output: 1, 2, 3, 4, 5"
        }
    ]
}