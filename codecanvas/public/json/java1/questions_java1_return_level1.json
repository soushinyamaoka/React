{
    "contentsId": "java_return_values_beginner",
    "title": "Javaの戻り値問題集ページ",
    "subtitle": "初級",
    "questions": [{
            "id": 1,
            "questionId": "java_return_values_beginner_1",
            "title": "戻り値のあるメソッド",
            "question": "整数型の引数を2つ受け取り、それらの積を返すメソッドを作成してください。",
            "explanation": "メソッドを作成し、引数を受け取って計算を行い、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int a = 4;\\n        int b = 5;\\n        int result = multiply(a, b);\\n        System.out.println(result); // 予想される出力結果: 20\\n    }\\n\\n    public static int multiply(int x, int y) {\\n        return x * y;\\n    }\\n}"
        },
        {
            "id": 2,
            "questionId": "java_return_values_beginner_2",
            "title": "戻り値のないメソッド",
            "question": "整数型の引数を2つ受け取り、それらの積を出力するメソッドを作成してください。ただし、戻り値は使用しないでください。",
            "explanation": "メソッドを作成し、引数を受け取って計算を行い、戻り値を使用せずに結果を出力します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int a = 4;\\n        int b = 5;\\n        printMultiply(a, b); // 予想される出力結果: 20\\n    }\\n\\n    public static void printMultiply(int x, int y) {\\n        System.out.println(x * y);\\n    }\\n}"
        },
        {
            "id": 3,
            "questionId": "java_return_values_beginner_3",
            "title": "文字列を返すメソッド",
            "question": "文字列型の引数を1つ受け取り、その文字列を2回繰り返した文字列を返すメソッドを作成してください。",
            "explanation": "メソッドを作成し、引数を受け取って処理を行い、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        String input = \"Hello\";\\n        String result = repeatString(input);\\n        System.out.println(result); // 予想される出力結果: \"HelloHello\"\\n    }\\n\\n    public static String repeatString(String s) {\\n        return s + s;\\n    }\\n}"
        },
        {
            "id": 4,
            "questionId": "java_return_values_beginner_4",
            "title": "ブール値を返すメソッド",
            "question": "整数型の引数を1つ受け取り、その値が偶数であればtrue、奇数であればfalseを返すメソッドを作成してください。",
            "explanation": "メソッドを作成し、引数を受け取って判定を行い、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int num = 4;\\n        boolean isEven = isEvenNumber(num);\\n        System.out.println(isEven); // 予想される出力結果: true\\n    }\\n\\n    public static boolean isEvenNumber(int n) {\\n        return n % 2 == 0;\\n    }\\n}"
        },
        {
            "id": 5,
            "questionId": "java_return_values_beginner_5",
            "title": "配列を返すメソッド",
            "question": "整数型の配列を受け取り、その要素の値をすべて2倍にした新しい配列を返すメソッドを作成してください。",
            "explanation": "メソッドを作成し、引数を受け取って処理を行い、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int[] nums = {1, 2, 3, 4, 5};\\n        int[] result = doubleArrayValues(nums);\\n        for (int i : result) {\\n            System.out.print(i + \" \"); // 予想される出力結果: 2 4 6 8 10\\n        }\\n    }\\n\\n    public static int[] doubleArrayValues(int[] arr) {\\n        int[] newArr = new int[arr.length];\\n        for (int i = 0; i < arr.length; i++) {\\n            newArr[i] = arr[i] * 2;\\n        }\\n        return newArr;\\n    }\\n}"
        },
        {
            "id": 6,
            "questionId": "java_return_values_beginner_6",
            "title": "メソッドの戻り値を無視する",
            "question": "整数型の引数を1つ受け取り、その値が偶数であればその値を返し、奇数であれば何も返さないメソッドを作成してください。ただし、戻り値が存在しない場合はvoidを使用してください。",
            "explanation": "メソッドを作成し、引数を受け取って判定を行い、戻り値が存在する場合のみ結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int num1 = 4;\\n        int num2 = 5;\\n        printEvenNumber(num1); // 予想される出力結果: 4\\n        printEvenNumber(num2); // 予想される出力結果: なし\\n    }\\n\\n    public static void printEvenNumber(int n) {\\n        if (n % 2 == 0) {\\n            System.out.println(n);\\n        }\\n    }\\n}"
        },
        {
            "id": 7,
            "questionId": "java_return_values_beginner_7",
            "title": "メソッドの呼び出しのネスト",
            "question": "整数型の引数を1つ受け取り、その値が偶数であればtrue、奇数であればfalseを返すメソッド（isEvenNumber）と、整数型の引数を1つ受け取り、その値が奇数であればtrue、偶数であればfalseを返すメソッド（isOddNumber）を作成し、isEvenNumberの戻り値がtrueの場合、isOddNumberを呼び出してください。",
            "explanation": "メソッドを作成し、引数を受け取って判定を行い、戻り値がtrueの場合、もう一つのメソッドを呼び出します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int num = 4;\\n        if (isEvenNumber(num)) {\\n            System.out.println(isOddNumber(num)); // 予想される出力結果: false\\n        }\\n    }\\n\\n    public static boolean isEvenNumber(int n) {\\n        return n % 2 == 0;\\n    }\\n\\n    public static boolean isOddNumber(int n) {\\n        return n % 2 != 0;\\n    }\\n}"
        },
        {
            "id": 8,
            "questionId": "java_return_values_beginner_8",
            "title": "メソッドから別のメソッドを呼び出す",
            "question": "整数型の引数を1つ受け取り、その値が3の倍数であればその値を返すメソッド（returnMultipleOfThree）を作成し、その戻り値が偶数であればtrue、奇数であればfalseを返す別のメソッド（isEvenNumber）を呼び出してください。",
            "explanation": "メソッドを作成し、引数を受け取って判定を行い、戻り値が存在する場合、別のメソッドを呼び出して結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int num = 6;\\n        int multipleOfThree = returnMultipleOfThree(num);\\n        if (multipleOfThree != -1) {\\n            System.out.println(isEvenNumber(multipleOfThree)); // 予想される出力結果: true\\n        }\\n    }\\n\\n    public static int returnMultipleOfThree(int n) {\\n        if (n % 3 == 0) {\\n            return n;\\n        } else {\\n            return -1;\\n        }\\n    }\\n\\n    public static boolean isEvenNumber(int n) {\\n        return n % 2 == 0;\\n    }\\n}"
        },
        {
            "id": 9,
            "questionId": "java_return_values_beginner_9",
            "title": "メソッドの戻り値を条件式で使う",
            "question": "整数型の引数を1つ受け取り、その値が10以上20以下であればtrue、それ以外であればfalseを返すメソッド（isInRange）を作成し、その戻り値がtrueの場合、「In range」と出力し、falseの場合、「Out of range」と出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って判定を行い、戻り値がtrueかfalseに応じて結果を出力します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int num = 15;\\n        if (isInRange(num)) {\\n            System.out.println(\"In range\"); // 予想される出力結果: In range\\n        } else {\\n            System.out.println(\"Out of range\");\\n        }\\n    }\\n\\n    public static boolean isInRange(int n) {\\n        return n >= 10 && n <= 20;\\n    }\\n}"
        },
        {
            "id": 10,
            "questionId": "java_return_values_beginner_10",
            "title": "メソッドの戻り値を計算に使う",
            "question": "整数型の引数を1つ受け取り、その値を2倍にした値を返すメソッド（doubleValue）を作成し、その戻り値を使って、元の値と戻り値の差を計算し、その結果を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って計算を行い、戻り値を使ってさらに計算を行い、結果を出力します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int num = 5;\\n        int doubled = doubleValue(num);\\n        int difference = doubled - num;\\n        System.out.println(difference); // 予想される出力結果: 5\\n    }\\n\\n    public static int doubleValue(int n) {\\n        return n * 2;\\n    }\\n}"
        },
        {
            "id": 11,
            "questionId": "java_return_values_beginner_11",
            "title": "メソッドの戻り値を加算する",
            "question": "整数型の引数を1つ受け取り、その値を2倍にした値を返すメソッド（doubleValue）と、整数型の引数を1つ受け取り、その値を3倍にした値を返すメソッド（tripleValue）を作成し、2つのメソッドの戻り値を加算して、その結果を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って計算を行い、戻り値を使ってさらに計算を行い、結果を出力します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int num = 5;\\n        int doubled = doubleValue(num);\\n        int tripled = tripleValue(num);\\n        int sum = doubled + tripled;\\n        System.out.println(sum); // 予想される出力結果: 25\\n    }\\n\\n    public static int doubleValue(int n) {\\n        return n * 2;\\n    }\\n\\n    public static int tripleValue(int n) {\\n        return n * 3;\\n    }\\n}"
        },
        {
            "id": 12,
            "questionId": "java_return_values_beginner_12",
            "title": "文字列を返すメソッド",
            "question": "文字列型の引数を1つ受け取り、その文字列に「Hello, 」を追加して返すメソッド（greet）を作成し、その戻り値を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って文字列を加工し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        String name = \"John\";\\n        String greeting = greet(name);\\n        System.out.println(greeting); // 予想される出力結果: Hello, John\\n    }\\n\\n    public static String greet(String name) {\\n        return \"Hello, \" + name;\\n    }\\n}"
        },
        {
            "id": 13,
            "questionId": "java_return_values_beginner_13",
            "title": "文字数を返すメソッド",
            "question": "文字列型の引数を1つ受け取り、その文字列の文字数を返すメソッド（countCharacters）を作成し、その戻り値を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って文字数をカウントし、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        String text = \"Hello, World!\";\\n        int characterCount = countCharacters(text);\\n        System.out.println(characterCount); // 予想される出力結果: 13\\n    }\\n\\n    public static int countCharacters(String text) {\\n        return text.length();\\n    }\\n}"
        },
        {
            "id": 14,
            "questionId": "java_return_values_beginner_14",
            "title": "文字列の一部を返すメソッド",
            "question": "文字列型の引数を1つ受け取り、その文字列の最初の3文字を返すメソッド（firstThreeCharacters）を作成し、その戻り値を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って文字列の一部を抽出し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        String text = \"Hello, World!\";\\n        String firstThree = firstThreeCharacters(text);\\n        System.out.println(firstThree); // 予想される出力結果: Hel\\n    }\\n\\n    public static String firstThreeCharacters(String text) {\\n        return text.substring(0, 3);\\n    }\\n}"
        },
        {
            "id": 15,
            "questionId": "java_return_values_beginner_15",
            "title": "配列の合計値を返すメソッド",
            "question": "整数型の配列を引数として受け取り、その配列の合計値を返すメソッド（sumArray）を作成し、その戻り値を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って配列の合計値を計算し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int[] numbers = {1, 2, 3, 4, 5};\\n        int sum = sumArray(numbers);\\n        System.out.println(sum); // 予想される出力結果: 15\\n    }\\n\\n    public static int sumArray(int[] array) {\\n        int sum = 0;\\n        for (int number : array) {\\n            sum += number;\\n        }\\n        return sum;\\n    }\\n}"
        },
        {
            "id": 16,
            "questionId": "java_return_values_beginner_16",
            "title": "最大値を返すメソッド",
            "question": "整数型の配列を引数として受け取り、その配列の最大値を返すメソッド（maxValue）を作成し、その戻り値を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って配列の最大値を計算し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int[] numbers = {1, 2, 3, 4, 5};\\n        int max = maxValue(numbers);\\n        System.out.println(max); // 予想される出力結果: 5\\n    }\\n\\n    public static int maxValue(int[] array) {\\n        int max = array[0];\\n        for (int number : array) {\\n            if (number > max) {\\n                max = number;\\n            }\\n        }\\n        return max;\\n    }\\n}"
        },
        {
            "id": 17,
            "questionId": "java_return_values_beginner_17",
            "title": "最小値を返すメソッド",
            "question": "整数型の配列を引数として受け取り、その配列の最小値を返すメソッド（minValue）を作成し、その戻り値を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って配列の最小値を計算し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int[] numbers = {1, 2, 3, 4, 5};\\n        int min = minValue(numbers);\\n        System.out.println(min); // 予想される出力結果: 1\\n    }\\n\\n    public static int minValue(int[] array) {\\n        int min = array[0];\\n        for (int number : array) {\\n            if (number < min) {\\n                min = number;\\n            }\\n        }\\n        return min;\\n    }\\n}"
        },
        {
            "id": 18,
            "questionId": "java_return_values_beginner_18",
            "title": "配列の平均値を返すメソッド",
            "question": "整数型の配列を引数として受け取り、その配列の平均値を返すメソッド（averageValue）を作成し、その戻り値を出力してください。",
            "explanation": "メソッドを作成し、引数を受け取って配列の平均値を計算し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int[] numbers = {1, 2, 3, 4, 5};\\n        double average = averageValue(numbers);\\n        System.out.println(average); // 予想される出力結果: 3.0\\n    }\\n\\n    public static double averageValue(int[] array) {\\n        int sum = 0;\\n        for (int number : array) {\\n            sum += number;\\n        }\\n        return (double) sum / array.length;\\n    }\\n}"
        },
        {
            "id": 19,
            "questionId": "java_return_values_beginner_19",
            "title": "指定した範囲の要素を抽出するメソッド",
            "question": "整数型の配列と2つの整数型の引数（startIndex, endIndex）を受け取り、指定した範囲の要素を新しい配列として返すメソッド（subArray）を作成し、その戻り値を出力してください。出力時は配列の各要素をカンマで区切って表示してください。",
            "explanation": "メソッドを作成し、引数を受け取って配列の指定した範囲の要素を抽出し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int[] numbers = {1, 2, 3, 4, 5};\\n        int[] result = subArray(numbers, 1, 3);\\n        for (int i = 0; i < result.length; i++) {\\n            System.out.print(result[i]);\\n            if (i < result.length - 1) {\\n                System.out.print(\", \");\\n            }\\n        }\\n        // 予想される出力結果: 2, 3, 4\\n    }\\n\\n    public static int[] subArray(int[] array, int startIndex, int endIndex) {\\n        int[] result = new int[endIndex - startIndex + 1];\\n        for (int i = startIndex; i <= endIndex; i++) {\\n            result[i - startIndex] = array[i];\\n        }\\n        return result;\\n    }\\n}"
        },
        {
            "id": 20,
            "questionId": "java_return_values_beginner_20",
            "title": "逆順に並べた配列を返すメソッド",
            "question": "整数型の配列を引数として受け取り、その配列の要素を逆順に並べた新しい配列を返すメソッド（reverseArray）を作成し、その戻り値を出力してください。出力時は配列の各要素をカンマで区切って表示してください。",
            "explanation": "メソッドを作成し、引数を受け取って配列の要素を逆順に並べた新しい配列を作成し、戻り値として結果を返します。",
            "answer": "public class Main {\\n    public static void main(String[] args) {\\n        int[] numbers = {1, 2, 3, 4, 5};\\n        int[] result = reverseArray(numbers);\\n        for (int i = 0; i < result.length; i++) {\\n            System.out.print(result[i]);\\n            if (i < result.length - 1) {\\n                System.out.print(\", \");\\n            }\\n        }\\n        // 予想される出力結果: 5, 4, 3, 2, 1\\n    }\\n\\n    public static int[] reverseArray(int[] array) {\\n        int[] result = new int[array.length];\\n        for (int i = 0; i < array.length; i++) {\\n            result[i] = array[array.length - 1 - i];\\n        }\\n        return result;\\n    }\\n}"
        }
    ]
}